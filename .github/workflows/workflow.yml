name: ci

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging
jobs:

  variables:
    runs-on: ubuntu-latest
    outputs:
      trigger: ${{ steps.actions.outputs.trigger }}
    steps:
      - id: actions
        run: echo "::set-output name=trigger::${{ github.event_name }}"

  repo-setup:
    name: workspace-setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - uses: actions/cache@v2
        id: package-cache
        with:
          path: |
            ${{ github.workspace }}/.next/cache
            ${{ github.workspace }}/node_modules
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]sx?') }}
          # If source files changed but packages didn't,restore node_modules and rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - run: npm ci
        if: steps.package-cache.outputs.cache-hit != 'true'

      - uses: actions/cache@v2
        id: cache-build
        with:
          path: ./*
          key: ${{ github.sha }}

  linter:
    name: linter
    runs-on: ubuntu-latest
    needs: repo-setup
    steps:
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - name: eslint
        run: npm run lint

      - name: prettier
        run: npm run prettier

  spell-check:
    name: spelling check
    runs-on: ubuntu-latest
    needs: repo-setup

    steps:
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - name: spelling check
        run: npm run cspell

  devBuild:
    name: push-build
    runs-on: ubuntu-latest
    needs: [repo-setup,linter,variables,spell-check]
    if: ${{ needs.variables.outputs.trigger == 'push'}}
    env:
      NEXT_TELEMETRY_DISABLED: 1
    steps:
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

      - name: Cached Build
        run: npm run build --if-present

      - name: Reinstall modules
        if: ${{ failure() }}
        run: npm ci

      - name: Clean Build
        if: ${{ failure() }}
        run: npm run build --if-present

  prodBuild:
    name: prod-build
    runs-on: ubuntu-latest
    needs: [linter,variables,spell-check]
    if: ${{ needs.variables.outputs.trigger == 'pull_request' }}
    env:
      NEXT_TELEMETRY_DISABLED: 1
    steps:
      - uses: actions/checkout@v2
      - run: npm ci
      - run: npm run build --if-present
