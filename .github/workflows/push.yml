name: ci

on:
  push:
    branches:
      - staging
      - main
  pull_request:
    branches:
      - main
      - staging

jobs:
  linter:
    name: linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
          
      - name: install dependencies
        run: npm ci

      - name: eslint
        run: npm run lint

      - name: prettier
        run: npm run prettier

  build:
    name: build
    runs-on: ubuntu-latest
    env:
      NEXT_TELEMETRY_DISABLED: 1
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/.next/cache
            ${{ github.workspace }}/node_modules
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]sx?') }}
          # If source files changed but packages didn't,restore node_modules and rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - run: npm install
      - run: npm run build --if-present


  # broken-links:
  #   name: broken-link check
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #     - uses: actions/cache@v2
  #       id: restore-build
  #       with:
  #         path: ./*
  #         key: ${{ github.sha }}

  #     - name: broken-link check
  #       run: npm run test-blc

  # spellchecking:
  #   name: spelling check
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #     - uses: actions/cache@v2
  #       id: restore-build
  #       with:
  #         path: ./*
  #         key: ${{ github.sha }}

  #     - uses: actions/setup-node@v1
  #       name: Run spell check
  #       with:
  #         node-version: "12"
  #     - run: npm install -g cspell
  #     - run: cspell --config ./cSpell.json "**/*.*"
